#version 420 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;

out vec3 Normal;
out vec3 FragPos;
out vec3 TexCoords;

layout (std140, binding=0) uniform Matrices
{
	mat4 view;		//16*4 bytes
	mat4 projection;	//16*4 bytes
	vec3 eyePosition;	//16
						//Total: 16*8+16 = 16*9
};

void main()
{
	gl_Position = projection * view  * vec4(aPos + eyePosition, 1.0);
	TexCoords = aPos;
    FragPos = vec3(projection*view*vec4(aPos+eyePosition,1.0));
    Normal = vec3(0,0,0);
}